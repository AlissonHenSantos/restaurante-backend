generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User{
   id        String   @id @default(uuid())
  email String @unique
  name String 
  password String
  role Role @default(WAITER)
}

enum Role {
  WAITER
  ADMIN
}

model Category {
  id        String   @id @default(uuid())
  category String @unique 
  products Product[] 
}

model Product {
  id        String   @id @default(uuid())
  name String
  price Decimal @db.Decimal(10,2) @default(0)
  categoryId String
  description String? 
  image String?
  item OrderItem[]
  category Category @relation(fields: [categoryId], references: [id], onDelete: Restrict)
}

enum TableStatus {
  AVALIABLE
  OCCUPIED
  RESERVED
  CLEANING
}

model Table {
  id        String      @id @default(uuid())
  number    Int         @unique
  status    TableStatus @default(AVALIABLE)
  capacity  Int?
  orders    Order[]
}


enum OrderStatus {
  PENDING    
  PREPARING  
  READY       
  DELIVERED   
  FINISHED    
  CANCELED    
}

model OrderItem {
  id        String   @id @default(uuid())
  amount    Int
  price     Decimal?  @db.Decimal(10, 2) // Pre√ßo "congelado"

  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String

  product   Product  @relation(fields: [productId], references: [id])
  productId String

  createdAt DateTime @default(now())
}

model Order {
  id        String      @id @default(uuid())
  status    OrderStatus @default(PENDING)
  total     Decimal?    @db.Decimal(10, 2) @default(0)
  notes     String?
  name      String?

  table     Table    @relation(fields: [tableId], references: [id])
  tableId   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  items     OrderItem[]
}